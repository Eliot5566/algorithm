openapi: 3.0.3
info:
  title: Forms API
  version: 1.0.0
  description: API for managing dynamic forms and submissions.
servers:
  - url: http://localhost:3000
paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Service is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
  /forms:
    get:
      summary: List forms
      responses:
        '200':
          description: A list of forms
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Form'
    post:
      summary: Create a form
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFormRequest'
      responses:
        '201':
          description: Form created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Form'
        '400':
          $ref: '#/components/responses/BadRequest'
  /forms/{id}/preview:
    post:
      summary: Build a preview payload for a form
      parameters:
        - $ref: '#/components/parameters/FormId'
      responses:
        '200':
          description: Preview payload returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FormPreview'
        '404':
          $ref: '#/components/responses/NotFound'
  /forms/{id}/submit:
    post:
      summary: Submit a form
      parameters:
        - $ref: '#/components/parameters/FormId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitFormRequest'
      responses:
        '201':
          description: Submission stored and chat response returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FormSubmission'
                  response:
                    $ref: '#/components/schemas/ChatResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /orders:
    get:
      summary: List form submissions
      responses:
        '200':
          description: A list of form submissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FormSubmission'
  /orders/{id}:
    patch:
      summary: Update submission status
      parameters:
        - $ref: '#/components/parameters/SubmissionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubmissionStatusRequest'
      responses:
        '200':
          description: Updated submission
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FormSubmission'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  parameters:
    FormId:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: ID of the form
    SubmissionId:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: ID of the form submission
  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    CreateFormRequest:
      type: object
      required:
        - name
        - schema_json
        - trigger_keywords
      properties:
        name:
          type: string
        schema_json:
          description: Arbitrary JSON schema used when rendering the form
          type: object
        trigger_keywords:
          type: array
          items:
            type: string
    Form:
      allOf:
        - $ref: '#/components/schemas/CreateFormRequest'
        - type: object
          required:
            - id
            - createdAt
            - updatedAt
          properties:
            id:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    PreviewField:
      type: object
      properties:
        name:
          type: string
        label:
          type: string
        type:
          type: string
          description: Simplified hint for how to render the field
        required:
          type: boolean
      required:
        - name
        - label
        - type
        - required
    FormPreview:
      type: object
      properties:
        formId:
          type: string
        name:
          type: string
        introText:
          type: string
        quickReplies:
          type: array
          items:
            type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PreviewField'
      required:
        - formId
        - name
        - introText
        - quickReplies
        - fields
    SubmitFormRequest:
      type: object
      required:
        - conversationId
        - payload
      properties:
        conversationId:
          type: string
        payload:
          description: Data captured by the form
          type: object
    ChatResponse:
      type: object
      properties:
        conversationId:
          type: string
        message:
          type: string
      required:
        - conversationId
        - message
    FormSubmission:
      type: object
      required:
        - id
        - formId
        - conversationId
        - payload
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
        formId:
          type: string
        conversationId:
          type: string
        payload:
          type: object
        status:
          type: string
          enum:
            - new
            - confirmed
            - cancelled
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UpdateSubmissionStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - new
            - confirmed
            - cancelled
